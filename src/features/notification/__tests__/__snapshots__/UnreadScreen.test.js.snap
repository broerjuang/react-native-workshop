// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UnreadScreen should render UnreadScreen corectly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView>
    <View>
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            undefined,
            Object {
              "borderRadius": 3,
            },
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#E7E7E7",
                },
                Object {
                  "borderRadius": 3,
                },
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 20,
                    },
                    Object {
                      "color": "black",
                    },
                    Object {
                      "fontSize": 17.5,
                    },
                    undefined,
                    undefined,
                    undefined,
                    null,
                    undefined,
                  ],
                ]
              }
            >
              MARK ALL AS READ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "margin": 10,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.2,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "#F1F1F1",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                activeOpacity={undefined}
                onLongPress={undefined}
                onPress={undefined}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 34,
                      "paddingBottom": 10,
                      "paddingRight": 10,
                      "paddingTop": 10,
                      "width": 34,
                    },
                    Object {
                      "borderRadius": 17,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(0,0,0,0.2)",
                        "bottom": 0,
                        "flex": 1,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 17,
                      },
                      undefined,
                    ]
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "https://png.icons8.com/color/1600/person-male.png",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 34,
                          "width": 34,
                        },
                        Object {
                          "borderRadius": 17,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                deandrasita/abcd
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Array [],
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                (testing long lines) Potential security vulnedjfjldsfl sldjflkdsjf kdjs flksdjflkjljflkjsd fjsdlfslfjsdklfkjf lkdsj  lkjkrability found in the hoek dependency.
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "margin": 10,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.2,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "#F1F1F1",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                activeOpacity={undefined}
                onLongPress={undefined}
                onPress={undefined}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 34,
                      "paddingBottom": 10,
                      "paddingRight": 10,
                      "paddingTop": 10,
                      "width": 34,
                    },
                    Object {
                      "borderRadius": 17,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(0,0,0,0.2)",
                        "bottom": 0,
                        "flex": 1,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 17,
                      },
                      undefined,
                    ]
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "https://previews.123rf.com/images/tuktukdesign/tuktukdesign1606/tuktukdesign160600109/59070192-user-icon-woman-profile-businesswoman-avatar-person-icon-in-vector-illustration.jpg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 34,
                          "width": 34,
                        },
                        Object {
                          "borderRadius": 17,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                deandrasita/abcd
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Array [],
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Potential security vulnerability found in the hoek dependency.
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "margin": 10,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.2,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "#F1F1F1",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                activeOpacity={undefined}
                onLongPress={undefined}
                onPress={undefined}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 34,
                      "paddingBottom": 10,
                      "paddingRight": 10,
                      "paddingTop": 10,
                      "width": 34,
                    },
                    Object {
                      "borderRadius": 17,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(0,0,0,0.2)",
                        "bottom": 0,
                        "flex": 1,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 17,
                      },
                      undefined,
                    ]
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "https://previews.123rf.com/images/tuktukdesign/tuktukdesign1606/tuktukdesign160600109/59070192-user-icon-woman-profile-businesswoman-avatar-person-icon-in-vector-illustration.jpg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 34,
                          "width": 34,
                        },
                        Object {
                          "borderRadius": 17,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                deandrasita/abcd
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Array [],
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Potential security vulnerability found in the hoek dependency.
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "margin": 10,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.2,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "#F1F1F1",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                activeOpacity={undefined}
                onLongPress={undefined}
                onPress={undefined}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 34,
                      "paddingBottom": 10,
                      "paddingRight": 10,
                      "paddingTop": 10,
                      "width": 34,
                    },
                    Object {
                      "borderRadius": 17,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(0,0,0,0.2)",
                        "bottom": 0,
                        "flex": 1,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 17,
                      },
                      undefined,
                    ]
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "https://previews.123rf.com/images/tuktukdesign/tuktukdesign1606/tuktukdesign160600109/59070192-user-icon-woman-profile-businesswoman-avatar-person-icon-in-vector-illustration.jpg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 34,
                          "width": 34,
                        },
                        Object {
                          "borderRadius": 17,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                deandrasita/abcd
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Array [],
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Potential security vulnerability found in the hoek dependency.
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "margin": 10,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.2,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Object {
                  "backgroundColor": "#F1F1F1",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                activeOpacity={undefined}
                onLongPress={undefined}
                onPress={undefined}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 34,
                      "paddingBottom": 10,
                      "paddingRight": 10,
                      "paddingTop": 10,
                      "width": 34,
                    },
                    Object {
                      "borderRadius": 17,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "rgba(0,0,0,0.2)",
                        "bottom": 0,
                        "flex": 1,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 17,
                      },
                      undefined,
                    ]
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "https://previews.123rf.com/images/tuktukdesign/tuktukdesign1606/tuktukdesign160600109/59070192-user-icon-woman-profile-businesswoman-avatar-person-icon-in-vector-illustration.jpg",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "height": 34,
                          "width": 34,
                        },
                        Object {
                          "borderRadius": 17,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                deandrasita/abcd
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                Array [],
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 10,
                  "width": "70%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Potential security vulnerability found in the hoek dependency.
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "15%",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
