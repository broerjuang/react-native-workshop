// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingScreen should render SettingScreen corectly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "paddingTop": 40,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "borderBottomColor": "grey",
        "borderBottomWidth": 2,
        "borderTopColor": "grey",
        "borderTopWidth": 2,
        "flexDirection": "column",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-between",
            "padding": 10,
            "paddingLeft": 15,
            "paddingRight": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "black",
            }
          }
        >
          Language
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomColor": "grey",
          "borderBottomWidth": 1,
          "borderTopColor": "grey",
          "opacity": 0.5,
        }
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-between",
            "padding": 10,
            "paddingLeft": 15,
            "paddingRight": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "black",
            }
          }
        >
          Open in Browser
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomColor": "grey",
          "borderBottomWidth": 1,
          "borderTopColor": "grey",
          "opacity": 0.5,
        }
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-between",
            "padding": 10,
            "paddingLeft": 15,
            "paddingRight": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "black",
            }
          }
        >
          Privacy Policy
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomColor": "grey",
          "borderBottomWidth": 1,
          "borderTopColor": "grey",
          "opacity": 0.5,
        }
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-between",
            "padding": 10,
            "paddingLeft": 15,
            "paddingRight": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "black",
            }
          }
        >
          Make a donation
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomColor": "grey",
          "borderBottomWidth": 1,
          "borderTopColor": "grey",
          "opacity": 0.5,
        }
      }
    />
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-between",
            "padding": 10,
            "paddingLeft": 15,
            "paddingRight": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "red",
            }
          }
        >
          Sign Out
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
  </View>
</View>
`;
