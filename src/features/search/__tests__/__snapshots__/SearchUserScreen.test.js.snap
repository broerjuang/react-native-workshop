// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`container test should render LoginScreen corectly 1`] = `
<RCTScrollView
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#d6d4d4",
          "borderTopWidth": 1,
          "opacity": 1,
          "paddingVertical": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "borderRadius": 16,
                  "height": 32,
                  "width": 32,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "padding": 10,
                "width": "70%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#d6d4d4",
          "borderTopWidth": 1,
          "opacity": 1,
          "paddingVertical": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "borderRadius": 16,
                  "height": 32,
                  "width": 32,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "padding": 10,
                "width": "70%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#d6d4d4",
          "borderTopWidth": 1,
          "opacity": 1,
          "paddingVertical": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "borderRadius": 16,
                  "height": 32,
                  "width": 32,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "padding": 10,
                "width": "70%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#d6d4d4",
          "borderTopWidth": 1,
          "opacity": 1,
          "paddingVertical": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "borderRadius": 16,
                  "height": 32,
                  "width": 32,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "padding": 10,
                "width": "70%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderColor": "#d6d4d4",
          "borderTopWidth": 1,
          "opacity": 1,
          "paddingVertical": 6,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Array [],
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "borderRadius": 16,
                  "height": 32,
                  "width": 32,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "padding": 10,
                "width": "70%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "15%",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
