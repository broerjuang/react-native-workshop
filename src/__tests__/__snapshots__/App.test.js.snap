// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Application should render App corectly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      pointerEvents="auto"
      removeClippedSubviews={false}
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "opacity": 1,
            },
          ],
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column-reverse",
                },
                Object {
                  "backgroundColor": "#000",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                pointerEvents="auto"
                style={
                  Object {
                    "backgroundColor": "#E9E9EF",
                    "bottom": 0,
                    "left": 0,
                    "marginTop": -64,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "shadowColor": "black",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 5,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "marginTop": 20,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#efefef",
                          "borderRadius": 5,
                          "display": "flex",
                          "flexDirection": "row",
                          "margin": 6,
                          "paddingHorizontal": 6,
                          "paddingVertical": 2,
                        }
                      }
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        collapsable={undefined}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                        />
                      </View>
                      <TextInput
                        allowFontScaling={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        returnKeyType="search"
                        style={
                          Object {
                            "backgroundColor": "#efefef",
                            "height": 40,
                            "width": "90%",
                          }
                        }
                        value=""
                      />
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#f5f5f5",
                            "borderColor": "#e3e3e3",
                            "borderRadius": 3,
                            "borderWidth": 1,
                            "flexDirection": "row",
                            "height": 40,
                            "marginBottom": 5,
                            "marginLeft": 10,
                            "marginRight": 10,
                            "marginTop": 5,
                            "overflow": "hidden",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                            },
                            Object {
                              "borderRightColor": "#bdc6cf",
                              "borderRightWidth": 0,
                            },
                            false,
                            false,
                            Object {
                              "borderBottomLeftRadius": 3,
                              "borderTopLeftRadius": 3,
                            },
                            Object {
                              "backgroundColor": "white",
                            },
                          ]
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            ellipsizeMode="tail"
                            style={
                              Array [
                                Object {},
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                Array [
                                  Object {
                                    "color": "#5e6977",
                                    "fontSize": 16.25,
                                    "fontWeight": "500",
                                  },
                                  undefined,
                                  Object {
                                    "color": "#43484d",
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            Repositories
                          </Text>
                        </View>
                      </View>
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                            },
                            false,
                            Object {
                              "borderLeftColor": "#bdc6cf",
                              "borderLeftWidth": 1,
                            },
                            Object {
                              "borderBottomRightRadius": 3,
                              "borderTopRightRadius": 3,
                            },
                            false,
                            false,
                          ]
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              undefined,
                              false,
                            ]
                          }
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            ellipsizeMode="tail"
                            style={
                              Array [
                                Object {},
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                Array [
                                  Object {
                                    "color": "#5e6977",
                                    "fontSize": 16.25,
                                    "fontWeight": "500",
                                  },
                                  undefined,
                                  false,
                                  false,
                                ],
                              ]
                            }
                          >
                            Users
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTScrollView
                      alwaysBounceHorizontal={false}
                      automaticallyAdjustContentInsets={false}
                      bounces={false}
                      contentContainerStyle={
                        Object {
                          "flex": 1,
                        }
                      }
                      contentOffset={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      directionalLockEnabled={true}
                      horizontal={true}
                      keyboardDismissMode="on-drag"
                      keyboardShouldPersistTaps="always"
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={undefined}
                      overScrollMode="never"
                      pagingEnabled={true}
                      scrollEnabled={undefined}
                      scrollEventThrottle={1}
                      scrollsToTop={false}
                      showsHorizontalScrollIndicator={false}
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View>
                        <View
                          accessibilityElementsHidden={false}
                          importantForAccessibility="auto"
                          style={
                            Object {
                              "flex": 1,
                              "overflow": "hidden",
                            }
                          }
                          testID={undefined}
                        >
                          <RCTScrollView
                            style={
                              Object {
                                "backgroundColor": "#fff",
                                "flex": 1,
                              }
                            }
                          >
                            <View />
                          </RCTScrollView>
                        </View>
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={null}
                          testID={undefined}
                        />
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              pointerEvents="box-none"
            >
              <View
                collapsable={undefined}
                style={
                  Object {
                    "backgroundColor": "#F7F7F7",
                    "transform": Array [
                      Object {
                        "translateX": -750,
                      },
                    ],
                  }
                }
              >
                <View
                  collapsable={undefined}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "backgroundColor": "#F7F7F7",
                      "borderBottomColor": "#A7A7AA",
                      "borderBottomWidth": 0.5,
                      "height": 64,
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 20,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={undefined}
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Object {
        "backgroundColor": "#F7F7F7",
        "borderTopColor": "rgba(0, 0, 0, .3)",
        "borderTopWidth": 0.5,
        "flexDirection": "row",
        "height": 49,
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Events"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "flexDirection": "column",
            "justifyContent": "flex-end",
          },
          undefined,
        ]
      }
      testID={undefined}
    >
      <View
        style={
          Array [
            Object {
              "height": 29,
            },
            Object {
              "flex": 1,
            },
            false,
          ]
        }
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 0,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 1,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Notification"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "flexDirection": "column",
            "justifyContent": "flex-end",
          },
          undefined,
        ]
      }
      testID={undefined}
    >
      <View
        style={
          Array [
            Object {
              "height": 29,
            },
            Object {
              "flex": 1,
            },
            false,
          ]
        }
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 0,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 1,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Search"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "flexDirection": "column",
            "justifyContent": "flex-end",
          },
          undefined,
        ]
      }
      testID={undefined}
    >
      <View
        style={
          Array [
            Object {
              "height": 29,
            },
            Object {
              "flex": 1,
            },
            false,
          ]
        }
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 1,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 0,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Profile"
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "flexDirection": "column",
            "justifyContent": "flex-end",
          },
          undefined,
        ]
      }
      testID={undefined}
    >
      <View
        style={
          Array [
            Object {
              "height": 29,
            },
            Object {
              "flex": 1,
            },
            false,
          ]
        }
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 0,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
<<<<<<< HEAD
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
=======
          <RCTWebView
            allowsInlineMediaPlayback={undefined}
            automaticallyAdjustContentInsets={undefined}
            bounces={undefined}
            contentInset={undefined}
            dataDetectorTypes={undefined}
            decelerationRate={undefined}
            injectedJavaScript={undefined}
            mediaPlaybackRequiresUserAction={undefined}
            messagingEnabled={false}
            onLoadingError={[Function]}
            onLoadingFinish={[Function]}
            onLoadingStart={[Function]}
            onMessage={[Function]}
            onShouldStartLoadWithRequest={undefined}
            scalesPageToFit={true}
            scrollEnabled={undefined}
            source={
              Object {
                "uri": "https://github.com/login/oauth/authorize?client_id=6b2f1b1ed973776bd76f&scope=user%20repo%20notifications",
              }
            }
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "backgroundColor": "#ffffff",
                },
                Object {
                  "backgroundColor": "blue",
                  "height": 0,
                  "width": 0,
                },
              ]
            }
>>>>>>> update login screen token checking, add token to fetchJSON for login only
          />
        </View>
        <View
          collapsable={undefined}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "height": "100%",
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 1,
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;
